
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Microsoft.AspNetCore.Http;
@model dynamic;
<head>
    <link rel="stylesheet" href="~/css/ProfilePage.css" />
    <script src="~/ckeditor/ckeditor.js"></script>
</head>
<body>
    <div class="container">
        <div class="main">
            <div class="main-container">
                <div class="profile">
                    <div class="profile-avatar">
                        <div class="position-relative">
                            <img src="@Model.User.AvatarURL.ToString()" alt="" class="profile-img" />
                            <form asp-controller="ProfilePage" asp-action="UploadAvatar" method="post" id="form" enctype="multipart/form-data">
                                <input type="file" id="file" style="" name="avatar" onchange="this.form.submit()" hidden />
                                <label for="file" class="btn btn-outline-dark position-absolute translate-middle badge border border-light rounded-circle" style="left: 75%; top:75%">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-camera" viewBox="0 0 16 16">
                                        <path d="M15 12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.172a3 3 0 0 0 2.12-.879l.83-.828A1 1 0 0 1 6.827 3h2.344a1 1 0 0 1 .707.293l.828.828A3 3 0 0 0 12.828 5H14a1 1 0 0 1 1 1v6zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4H2z" />
                                        <path d="M8 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5zm0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7zM3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z" />
                                    </svg>
                                </label>
                            </form>
                        </div>
                        <div class="profile-name">@Model.User.name</div>
                    </div>
                    @*<img src="https://images.unsplash.com/photo-1508247967583-7d982ea01526?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80" alt="" class="profile-cover">*@
                    <div style="background-image: linear-gradient(to right top, #d16ba5, #c777b9, #ba83ca, #aa8fd8, #9a9ae1, #8aa7ec, #79b3f4, #69bff8, #52cffe, #41dfff, #46eefa, #5ffbf1);" class="profile-cover"></div>
                    <div class="profile-menu">
                        <a href="/ProfilePage?EmailAddress=@Model.User.EmailAddress">
                            <button class="profile-menu-link active">Bài viết</button>
                        </a>
                        @if (Context.Session.GetString("email") == Model.User.EmailAddress)
                        {
                            <a href="/ProfilePage/Information?EmailAddress=@Context.Session.GetString("email")">
                                <button class="profile-menu-link">Thông tin</button>
                            </a>
                            <a href="/ChangePassword/ChangePasswordGUI?EmailAddress=@Context.Session.GetString("email")">
                                <button class="profile-menu-link">Đổi mật khẩu</button>
                            </a>
                            <a href="/Friend/ManageFriendGUI?EmailAddress=@Model.User.EmailAddress">
                                <button class="profile-menu-link">Danh sách bạn bè</button>
                            </a>
                        }
                        else
                        {
                            @if (Context.Session.GetString("email") != null)
                            {
                                @if (Model.isFriended.ToString() == "False")
                                {
                                    @using (Html.BeginForm("InsertFriendRequest", "FriendRequest", new { UserEmail = Model.User.EmailAddress }, FormMethod.Post))
                                    {
                                        <button class="profile-menu-link">Kết bạn</button>
                                    }
                                }
                                @if (Model.isBlocked.ToString() == "False")
                                {
                                    @using (Html.BeginForm("InsertBlockedEmail", "BlockedEmail", new { BlockedUser = Model.User.EmailAddress }, FormMethod.Post))
                                    {
                                        <button class="profile-menu-link">Chặn</button>
                                    }
                                }
                                else
                                {
                                    @using (Html.BeginForm("DeleteBlockedEmail", "BlockedEmail", new { BlockedUser = Model.User.EmailAddress }, FormMethod.Post))
                                    {
                                        <button class="profile-menu-link">Bỏ chặn</button>
                                    }
                                }
                            }
                        }
                    </div>
                </div>
                <div class="timeline h-100">
                    <div class="timeline-right">
                        <div class="status box">
                            @if (Context.Session.GetString("email") == Model.User.EmailAddress)
                            {
                                <form asp-controller="Post" asp-action="Create" method="post">
                                    <div class="status-main">
                                        <div class="row mt-2 w-100">
                                            <div class="col-1">
                                                <img src="@Model.User.AvatarURL.ToString()" class="status-img">
                                            </div>
                                            <div class="col">
                                                <label for="input-title" class="my-2" style="color:#1f1c2e ">Tiêu đề</label>
                                                <input id="input-title" name="Title" class="form-control my-2" />
                                                <textarea class="status-textarea" placeholder="Hãy viết gì đó.." id="editor1" name="Content"></textarea>
                                                <label for="input-privacy" style="color:#1f1c2e " class="my-2">Quyền riêng tư</label>
                                                <select class="form-control" name="Privacy" id="input-privacy">
                                                    <option value="Public">Công khai</option>
                                                    <option value="Friend">Bạn bè</option>
                                                    <option value="OnlyMe">Chỉ mình tôi</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="status-actions">
                                        <button type="submit" class="status-share">Đăng</button>
                                    </div>
                                </form>
                            }
                        </div>
                        @foreach (var post in Model.Posts)
                        {
                            @if (@post.GetType().GetProperty("SharePrivacy").GetValue(post, null) == "0")
                            {
                                <div class="album box">
                                    <div class="status-main">
                                        <img src="@post.GetType().GetProperty("AvatarURL").GetValue(post, null)" class="status-img" />
                                        <div class="album-detail">
                                            <div class="album-title"><strong>@post.GetType().GetProperty("name").GetValue(post, null)</strong> đã đăng <span>bài viết</span></div>
                                            <div class="album-date">@post.GetType().GetProperty("TimeCreate").GetValue(post, null)</div>
                                        </div>
                                        <button class="intro-menu" id="more-btn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-vertical">
                                                <circle cx="12" cy="12" r="1" />
                                                <circle cx="12" cy="5" r="1" />
                                                <circle cx="12" cy="19" r="1" />
                                            </svg>
                                        </button>

                                        <div class="dropdown-menu" aria-labelledby="more-btn">
                                            <a class="dropdown-item" href="/post/DetailedPostPage?id=@post.GetType().GetProperty("ID").GetValue(post, null)">Xem chi tiết</a>
                                            @if (post.GetType().GetProperty("Author").GetValue(post, null) == Context.Session.GetString("email"))
                                            {

                                                <form asp-controller="Post" asp-action="Delete" asp-route-id="@post.GetType().GetProperty("ID").GetValue(post, null)" method="post">
                                                    <button type="submit" class="dropdown-item">Xoá</button>
                                                </form>
                                                <a class="dropdown-item" href="/post/edit?id=@post.GetType().GetProperty("ID").GetValue(post, null)">Sửa</a>
                                            }
                                        </div>
                                    </div>
                                    <div class="album-content">
                                        <h3 class="text-center">@Html.Raw(post.GetType().GetProperty("Title").GetValue(post, null))</h3>
                                        @Html.Raw(post.GetType().GetProperty("Content").GetValue(post, null))
                                    </div>
                                    <div class="album-actions">
                                        <a href="#" class="album-action @(post.GetType().GetProperty("isLiked") != null ? (post.GetType().GetProperty("isLiked").GetValue(post, null).ToString() == "True" ? "active" : "") : "")">
                                            <svg stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24">
                                                <path d="M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 00-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 000-7.78z" />
                                            </svg>
                                            @post.GetType().GetProperty("Like").GetValue(post, null)
                                        </a>
                                        <a href="#" class="album-action">
                                            <svg stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1" viewBox="0 0 24 24">
                                                <path d="M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z" />
                                            </svg>
                                            @post.GetType().GetProperty("Comment").GetValue(post, null)
                                        </a>
                                        <a href="#" class="album-action">
                                            <svg stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1" viewBox="0 0 24 24">
                                                <path d="M17 1l4 4-4 4" />
                                                <path d="M3 11V9a4 4 0 014-4h14M7 23l-4-4 4-4" />
                                                <path d="M21 13v2a4 4 0 01-4 4H3" />
                                            </svg>
                                            @post.GetType().GetProperty("Share").GetValue(post, null)
                                        </a>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="album box">
                                    <div class="status-main">
                                        <img src="@Model.User.AvatarURL" class="status-img" />
                                        <div class="album-detail">
                                            <div class="album-title"><strong>@Model.User.name</strong> đã chia sẻ <span>bài viết</span></div>
                                            <div class="album-date">@post.GetType().GetProperty("ShareTime").GetValue(post, null)</div>
                                        </div>
                                        <button class="intro-menu" id="more-btn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-vertical">
                                                <circle cx="12" cy="12" r="1" />
                                                <circle cx="12" cy="5" r="1" />
                                                <circle cx="12" cy="19" r="1" />
                                            </svg>
                                        </button>

                                        <div class="dropdown-menu" aria-labelledby="more-btn">
                                            <a class="dropdown-item" href="/post/DetailedPostPage?id=@post.GetType().GetProperty("ID").GetValue(post, null)">Xem chi tiết</a>
                                            @if (post.GetType().GetProperty("Author").GetValue(post, null) == Context.Session.GetString("email"))
                                            {
                                                <form asp-controller="Post" asp-action="Delete" asp-route-id="@post.GetType().GetProperty("ID").GetValue(post, null)" method="post">
                                                    <button type="submit" class="dropdown-item">Xoá</button>
                                                </form>
                                                <a class="dropdown-item" href="/post/edit?id=@post.GetType().GetProperty("ID").GetValue(post, null)">Sửa</a>
                                            }
                                        </div>
                                    </div>
                                    <div class="album-content">
                                        <h3 class="text-center">@Html.Raw(post.GetType().GetProperty("Title").GetValue(post, null))</h3>
                                        @Html.Raw(post.GetType().GetProperty("Content").GetValue(post, null))
                                    </div>
                                    <div class="album-actions">
                                        <a href="#" class="album-action @(post.GetType().GetProperty("isLiked") != null ? (post.GetType().GetProperty("isLiked").GetValue(post, null).ToString() == "True" ? "active" : "") : "")">
                                            <svg stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24">
                                                <path d="M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 00-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 000-7.78z" />
                                            </svg>
                                            @post.GetType().GetProperty("Like").GetValue(post, null)
                                        </a>
                                        <a href="#" class="album-action">
                                            <svg stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1" viewBox="0 0 24 24">
                                                <path d="M21 15a2 2 0 01-2 2H7l-4 4V5a2 2 0 012-2h14a2 2 0 012 2z" />
                                            </svg>
                                            @post.GetType().GetProperty("Comment").GetValue(post, null)
                                        </a>
                                        <a href="#" class="album-action">
                                            <svg stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1" viewBox="0 0 24 24">
                                                <path d="M17 1l4 4-4 4" />
                                                <path d="M3 11V9a4 4 0 014-4h14M7 23l-4-4 4-4" />
                                                <path d="M21 13v2a4 4 0 01-4 4H3" />
                                            </svg>
                                            @post.GetType().GetProperty("Share").GetValue(post, null)
                                        </a>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="right-side">
            <div class="side-wrapper contacts">
                <div class="side-title">Liên hệ</div>
                @foreach (var item in Model.Friends)
                {
                    <div class="user">
                        <img src="@item.GetType().GetProperty("AvatarURL").GetValue(item, null)" class="user-img">
                        <div class="username">
                            <a href="/Chat/ChatPageGUI?ChatId=@item.GetType().GetProperty("ChatId").GetValue(item, null)">
                                @item.GetType().GetProperty("name").GetValue(item, null)
                            </a>
                            <div class="user-status @(item.GetType().GetProperty("SignInStatus").GetValue(item, null).ToString() == "Offline" ? "offline" : "")"></div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="overlay"></div>
    </div>
    <script>
        var editor = CKEDITOR.replace('editor1', {
            height: 400,
            filebrowserUploadUrl: '/Post/UploadCKEditor',
            filebrowserBrowseUrl: '/Post/BrowseCKEditor'
        });
    </script>

</body>